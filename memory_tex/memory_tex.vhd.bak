library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity memory_tex is
port 
		(address : in std_logic_vector(7 downto 0);
		 data_in : in std_logic_vector(7 downto 0);
		 writee : in std_logic;
		 port_in_00 : in std_logic_vector(7 downto 0);
		 port_in_01 : in std_logic_vector(7 downto 0);
		 clock : in std_logic;
		 reset : in std_logic;
		 
		 port_out_00 : out std_logic_vector(7 downto 0);
		 port_out_01 : out std_logic_vector(7 downto 0);
		 
		 data_out : out std_logic_vector(7 downto 0));
		 
end entity;

architecture memory_tex_arch of memory_tex is

component tabla is
    port (A ,B ,C ,D,E : in std_logic ;
	 ABCDEFG: out std_logic_vector (7 downto 0));
end component;

component bcd is
    port (IA ,IB ,IC ,ID : in std_logic ;
	 ABCDEFG: out std_logic_vector (6 downto 0));
end component;

component memory_vhd is
port 
		(address : in std_logic_vector(7 downto 0);
		 clock : in std_logic;
		 reset : in std_logic;
		 data_in : in std_logic_vector(7 downto 0);
		 writee : in std_logic;
		 port_in_00 : in std_logic_vector(7 downto 0);
		 port_in_01 : in std_logic_vector(7 downto 0);
		 port_out_00 : out std_logic_vector(7 downto 0);
		 port_out_01 : out std_logic_vector(7 downto 0);
		 
		 data_out : out std_logic_vector(7 downto 0));
		 
end component;

U2 : memory_vhd port map (address => address, data_in=> data_in, writee=> writee(2),port_in_00=>port_in_00,port_in_01=> port_in_01,clock =>clock,reset => reset);


